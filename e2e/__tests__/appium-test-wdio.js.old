const wdio = require('webdriverio');
const path = require('path');


const androidOpt = {
  platformName: 'Android',
  automationName: 'UiAutomator2',
  deviceName: 'Android Emulator',
  platformVersion: null,
  app: undefined // Will be added in tests
};

const serverConfig = {
  host: process.env.APPIUM_HOST || 'localhost',
  port: process.env.APPIUM_PORT || 4723,
  logLevel: 'info'
};

const androidOptions = Object.assign(
  {
    capabilities: androidOpt
  },
  serverConfig
);

const app = path.resolve(__dirname, '../../android/app/build/outputs/apk/release/app-release.apk');
androidOptions.capabilities.app = app;

let client;

beforeAll(async () => {
  jest.setTimeout(30 * 1000);

  client = await wdio.remote(androidOptions);

  // NOTE-RT: Setting an implicit wait timeout isn't supported for mobile yet...
  // await client.setTimeout({
  //   implicit: 15 * 1000
  // })
});

afterAll(async () => {
  await client.deleteSession();
});

describe('Create Android session (wdio)', () => {
  beforeEach(async () => {
    console.info('[beforeEach] client.getPageSource()', await client.getPageSource()); // eslint-disable-line no-console
    console.info('[beforeEach] pausing for 5 seconds between tests...'); // eslint-disable-line no-console
    await client.pause(5000);
  });

  it('should create and destroy a session', async () => {
    expect(await client.getCurrentPackage()).toBe('com.apktest');
  });

  it('Press alert button and press OK', async () => {
    await client.pause(5000);
    console.log('REGULAR BUTTON');
    let button = await client.$('~test-button-1');
    // console.log(button)
    await button.click();

    // Click alert message button
    await client.pause(2000);
    let okbutton = await client.$('android=new UiSelector().resourceId("android:id/button1")');
    console.log('OK');
    // console.log(okbutton);
    await okbutton.click();
    await client.pause(5000);
  });

  it('Press alert button and press Cancel', async () => {
    await client.pause(5000);
    console.log('REGULAR BUTTON');
    let button = await client.$('~test-button-1');
    // console.log(button)
    await button.click();

    // Click alert message button
    await client.pause(2000);
    let okbutton = await client.$('android=new UiSelector().resourceId("android:id/button2")');
    console.log('CANCEL');
    // console.log(okbutton);
    await okbutton.click();
    await client.pause(5000);
  });

  it('Press second button and press OK', async () => {
    await client.pause(5000);
    console.log('REGULAR BUTTON');
    let button = await client.$('~test-button-2');
    // console.log(button)
    await button.click();

    // Click alert message button
    await client.pause(2000);
    let okbutton = await client.$('android=new UiSelector().resourceId("android:id/button1")');
    console.log('OK');
    // console.log(okbutton);
    await okbutton.click();
    await client.pause(5000);
  });

  it('Press alert button and press Cancel', async () => {
    await client.pause(5000);
    console.log('REGULAR BUTTON');
    let button = await client.$('~test-button-2');
    // console.log(button)
    await button.click();

    // Click alert message button
    await client.pause(2000);
    let okbutton = await client.$('android=new UiSelector().resourceId("android:id/button2")');
    console.log('CANCEL');
    // console.log(okbutton);
    await okbutton.click();
    await client.pause(5000);
  });
});